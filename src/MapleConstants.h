#pragma once

#include <string>

#include "Typedefs.h"

typedef unsigned char byte;

constexpr std::size_t k_packetHandshakeServerLength = 13; // the size of the handshake packet
constexpr short k_gameVersion = 62; // major game version
constexpr short k_gameMinorVersion = 1; // minor game version, if 0, then the string is empty
constexpr byte k_gmsLocale = 8;

constexpr std::size_t k_ivBufferSize = 16;
constexpr std::size_t k_headerSize = 4;
const std::string k_gameFilePath = "C:/Nexon/Maplestory/";

enum class Job : u32
{
    BEGINNER = 0,
    WARRIOR = 100,
    FIGHTER = 110,
    CRUSADER = 111,
    HERO = 112,
    PAGE = 120,
    WHITEKNIGHT = 121,
    PALADIN = 122,
    SPEARMAN = 130,
    DRAGONKNIGHT = 131,
    DARKKNIGHT = 132,
    MAGICIAN = 200,
    FP_WIZARD = 210,
    FP_MAGE = 211,
    FP_ARCHMAGE = 212,
    IL_WIZARD = 220,
    IL_MAGE = 221,
    IL_ARCHMAGE = 222,
    CLERIC = 230,
    PRIEST = 231,
    BISHOP = 232,
    BOWMAN = 300,
    HUNTER = 310,
    RANGER = 311,
    BOWMASTER = 312,
    CROSSBOWMAN = 320,
    SNIPER = 321,
    CROSSBOWMASTER = 322,
    THIEF = 400,
    ASSASSIN = 410,
    HERMIT = 411,
    NIGHTLORD = 412,
    BANDIT = 420,
    CHIEFBANDIT = 421,
    SHADOWER = 422,
    PIRATE = 500,
    BRAWLER = 510,
    MARAUDER = 511,
    BUCCANEER = 512,
    GUNSLINGER = 520,
    OUTLAW = 521,
    CORSAIR = 522,
    GM = 900,
    SUPERGM = 910
};

enum class SkinColor : u32
{
    NORMAL = 0,
    DARK = 1,
    BLACK = 2,
    PALE = 3,
    BLUE = 4,
    WHITE = 9
};

enum class MapleInventoryType : u32
{
    UNDEFINED = 0,
    EQUIP = 1,
    USE = 2,
    SETUP = 3,
    ETC = 4,
    CASH = 5,
    EQUIPPED = -1
};

// Values are the respective weapons max damage multipliers
namespace MapleWeaponType
{
    float none = 0.0f;
    float bow = 3.4f;
    float claw = 3.6f;
    float dagger = 4.0f;
    float crossbow = 3.6f;
    float axe_1h = 4.4f;
    float axe_2h = 4.8f;
    float sword_1h = 4.0f;
    float sword_2h = 4.6f;
    float blunt_1h = 4.4f;
    float blunt_2h = 4.8f;
    float pole_arm = 5.0f;
    float spear = 5.0f;
    float staff = 3.6f;
    float want = 3.6f;
    float knuckle = 4.0f;
    float gun = 5.0f;
};

std::vector<u32> expTable = { 0, 15, 34, 57, 92, 135, 372, 560, 840, 1242, 1716, 2360, 3216, 4200, 5460, 7050, 8840,
    11040, 13716, 16680, 20216, 24402, 28980, 34320, 40512, 47216, 54900, 63666, 73080, 83720, 95700, 108480,
    122760, 138666, 155540, 174216, 194832, 216600, 240500, 266682, 294216, 324240, 356916, 391160, 428280, 468450,
    510420, 555680, 604416, 655200, 709716, 748608, 789631, 832902, 878545, 926689, 977471, 1031036, 1087536,
    1147032, 1209994, 1276301, 1346242, 1420016, 1497832, 1579913, 1666492, 1757815, 1854143, 1955750, 2062925,
    2175973, 2295216, 2420993, 2553663, 2693603, 2841212, 2996910, 3161140, 3334370, 3517093, 3709829, 3913127,
    4127566, 4353756, 4592341, 4844001, 5109452, 5389449, 5684790, 5996316, 6324914, 6671519, 7037118, 7422752,
    7829518, 8258575, 8711144, 9188514, 9692044, 10223168, 10783397, 11374327, 11997640, 12655110, 13348610,
    14080113, 14851703, 15665576, 16524049, 17429566, 18384706, 19392187, 20454878, 21575805, 22758159, 24005306,
    25320796, 26708375, 28171993, 29715818, 31344244, 33061908, 34873700, 36784778, 38800583, 40926854, 43169645,
    45535341, 48030677, 50662758, 53439077, 56367538, 59456479, 62714694, 66151459, 69776558, 73600313, 77633610,
    81887931, 86375389, 91108760, 96101520, 101367883, 106992842, 112782213, 118962678, 125481832, 132358236,
    139611467, 147262175, 155332142, 163844343, 172823012, 182293713, 192283408, 202820538, 213935103, 225658746,
    238024845, 251068606, 264827165, 279339639, 294647508, 310794191, 327825712, 345790561, 364739883, 384727628,
    405810702, 428049128, 451506220, 476248760, 502347192, 529875818, 558913012, 589541445, 621848316, 655925603,
    691870326, 729784819, 769777027, 811960808, 856456260, 903390063, 952895838, 1005114529, 1060194805,
    1118293480, 1179575962, 1244216724, 1312399800, 1384319309, 1460180007, 1540197871, 1624600714, 1713628833,
    1807535693, 1906558648, 2011069705, 2121276324
};

std::vector<u32> petExpTable = { 0, 1, 3, 6, 14, 31, 60, 108, 181, 287, 434, 632, 891, 1224, 1642, 2161, 2793,
    3557, 4467, 5542, 6801, 8263, 9950, 11882, 14084, 16578, 19391, 22547, 26074, 30000
};

std::vector<u32> mountExpTable = { 0, 6, 25, 50, 105, 134, 196, 254, 263, 315, 367, 430, 543, 587, 679, 725, 897, 1146, 1394, 1701, 2247,
    2543, 2898, 3156, 3313, 3584, 3923, 4150, 4305, 4550
};